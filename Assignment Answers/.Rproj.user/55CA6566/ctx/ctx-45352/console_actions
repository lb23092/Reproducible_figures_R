{
    "type": [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "    remove_empty_columns_rows() %>%",
        "+ ",
        "    select(species) %>%",
        "+ ",
        "    select(culmen_length_mm) %>%",
        "+ ",
        "    select(body_mass_g)",
        "\u001B[1m\u001B[33mError\u001B[39m in `select()`:\u001B[22m\n\u001B[33m!\u001B[39m Can't subset columns that don't exist.\n\u001B[31m✖\u001B[39m Column `culmen_length_mm` doesn't exist.\nBacktrace:\n\u001B[90m 1. \u001B[39m... %>% select(body_mass_g)\n\u001B[90m 4. \u001B[39m\u001B[1m\u001B[94mdplyr:::select.data.frame(\u001B[39m\u001B[22m., culmen_length_mm\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "source(\"functions/cleaning.r\")",
        "> ",
        "penguins_clean_Q2 <- penguins_raw  %>%",
        "+ ",
        "    clean_column_names() %>%",
        "+ ",
        "    shorten_species() %>%",
        "+ ",
        "    remove_empty_columns_rows()",
        "> ",
        "penguins_clean_Q2",
        "> ",
        "write.csv(penguins_clean_Q2, \"data/ppenguin_clean_Q2\")",
        "> ",
        "write.csv(penguins_clean_Q2, \"data/penguins_clean_Q2\")",
        "> ",
        "penguins_clean_Q2",
        "> ",
        "#all of my functions are stored in my cleaning.r file ",
        "> ",
        "source(\"functions/cleaning.r\")",
        "> ",
        "",
        "> ",
        "penguins_clean_Q2 <- penguins_raw  %>%",
        "+ ",
        "    clean_column_names() %>%",
        "+ ",
        "    shorten_species() %>%",
        "+ ",
        "    remove_empty_columns_rows() %>%",
        "+ ",
        "  subset_columns <- function(penguins_data, c(species,culmen_length_mm, body_mass_g ))",
        "Error: unexpected '(' in:\n\"    remove_empty_columns_rows() %>%\n  subset_columns <- function(penguins_data, c(\"\n",
        "> ",
        "#all of my functions are stored in my cleaning.r file ",
        "> ",
        "source(\"functions/cleaning.r\")",
        "> ",
        "",
        "> ",
        "penguins_clean_Q2 <- penguins_raw  %>%",
        "+ ",
        "    clean_column_names() %>%",
        "+ ",
        "    shorten_species() %>%",
        "+ ",
        "    remove_empty_columns_rows() %>%",
        "+ ",
        "  subset_columns <- function(penguins_data, c(species,culmen_length_mm, body_mass_g)",
        "Error: unexpected '(' in:\n\"    remove_empty_columns_rows() %>%\n  subset_columns <- function(penguins_data, c(\"\n",
        "> ",
        "#all of my functions are stored in my cleaning.r file ",
        "> ",
        "source(\"functions/cleaning.r\")",
        "> ",
        "",
        "> ",
        "penguins_clean_Q2 <- penguins_raw  %>%",
        "+ ",
        "    clean_column_names() %>%",
        "+ ",
        "    shorten_species() %>%",
        "+ ",
        "    remove_empty_columns_rows() %>%",
        "+ ",
        "    subset_columns <- function(penguins_data, c(species,culmen_length_mm, body_mass_g)",
        "Error: unexpected '(' in:\n\"    remove_empty_columns_rows() %>%\n    subset_columns <- function(penguins_data, c(\"\n",
        "> ",
        "#all of my functions are stored in my cleaning.r file ",
        "> ",
        "source(\"functions/cleaning.r\")",
        "> ",
        "",
        "> ",
        "penguins_clean_Q2 <- penguins_raw  %>%",
        "+ ",
        "    clean_column_names() %>%",
        "+ ",
        "    shorten_species() %>%",
        "+ ",
        "    remove_empty_columns_rows() %>%",
        "+ ",
        "    subset_columns <- function(penguins_data, c(species,culmen_length_mm, body_mass_g))",
        "Error: unexpected '(' in:\n\"    remove_empty_columns_rows() %>%\n    subset_columns <- function(penguins_data, c(\"\n",
        "> ",
        "#all of my functions are stored in my cleaning.r file ",
        "> ",
        "source(\"functions/cleaning.r\")",
        "> ",
        "",
        "> ",
        "penguins_clean_Q2 <- penguins_raw  %>%",
        "+ ",
        "    clean_column_names() %>%",
        "+ ",
        "    shorten_species() %>%",
        "+ ",
        "    remove_empty_columns_rows() %>%",
        "+ ",
        "    subset_columns <- function(penguins_data, c(species,culmen_length_mm, body_mass_g))",
        "Error: unexpected '(' in:\n\"    remove_empty_columns_rows() %>%\n    subset_columns <- function(penguins_data, c(\"\n",
        "> ",
        "#all of my functions are stored in my cleaning.r file ",
        "> ",
        "source(\"functions/cleaning.r\")",
        "> ",
        "",
        "> ",
        "penguins_clean_Q2 <- penguins_raw  %>%",
        "+ ",
        "    clean_column_names() %>%",
        "+ ",
        "    shorten_species() %>%",
        "+ ",
        "    remove_empty_columns_rows() %>%",
        "+ ",
        "    subset_columns <- function(penguins_data, (species,culmen_length_mm, body_mass_g))",
        "Error: unexpected '(' in:\n\"    remove_empty_columns_rows() %>%\n    subset_columns <- function(penguins_data, (\"\n",
        "> ",
        "#all of my functions are stored in my cleaning.r file ",
        "> ",
        "source(\"functions/cleaning.r\")",
        "> ",
        "",
        "> ",
        "penguins_clean_Q2 <- penguins_raw  %>%",
        "+ ",
        "    clean_column_names() %>%",
        "+ ",
        "    shorten_species() %>%",
        "+ ",
        "    remove_empty_columns_rows() %>%",
        "+ ",
        "    subset_columns <- function(penguins_data, species,culmen_length_mm, body_mass_g)",
        "+ ",
        "penguins_clean_Q2",
        "Error in penguins_raw %>% clean_column_names() %>% shorten_species() %>%  : \n  could not find function \"%>%<-\"\n",
        "> ",
        "#all of my functions are stored in my cleaning.r file ",
        "> ",
        "source(\"functions/cleaning.r\")",
        "> ",
        "",
        "> ",
        "penguins_clean_Q2 <- penguins_raw  %>%",
        "+ ",
        "    clean_column_names() %>%",
        "+ ",
        "    shorten_species() %>%",
        "+ ",
        "    remove_empty_columns_rows()",
        "> ",
        "penguins_clean_Q2",
        "> ",
        "write.csv(penguins_clean_Q2, \"data/penguins_clean_Q2\")",
        "> ",
        "penguins_clean_Q2 <- penguins_raw  %>%",
        "+ ",
        "    clean_column_names() %>%",
        "+ ",
        "    shorten_species() %>%",
        "+ ",
        "    remove_empty_columns_rows() %>%",
        "+ ",
        "   remove_NA()",
        "> ",
        "penguins_clean_Q2",
        "> ",
        "write.csv(penguins_clean_Q2, \"data/penguins_clean_Q2\")",
        "> ",
        "explanatory plot(penguins_clean_Q2)",
        "Error: unexpected symbol in \"explanatory plot\"\n",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "Error in explanatory_plot(penguins_clean_Q2) : \n  could not find function \"explanatory_plot\"\n",
        "> ",
        "#all of my functions are stored in my cleaning.r file ",
        "> ",
        "source(\"functions/cleaning.r\")",
        "Warning in file(filename, \"r\", encoding = encoding) :",
        "\n ",
        " cannot open file 'functions/cleaning.r': No such file or directory\n",
        "Error in file(filename, \"r\", encoding = encoding) : \n  cannot open the connection\n",
        "> ",
        "#all of my functions are stored in my cleaning.r file ",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "",
        "> ",
        "penguins_clean_Q2 <- penguins_raw  %>%",
        "+ ",
        "    clean_column_names() %>%",
        "+ ",
        "    shorten_species() %>%",
        "+ ",
        "    remove_empty_columns_rows() %>%",
        "+ ",
        "   remove_NA()",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "Error in explanatory_plot(penguins_clean_Q2) : \n  could not find function \"explanatory_plot\"\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "Error in explanatory_plot(penguins_clean_Q2) : \n  could not find function \"explanatory_plot\"\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "Error in source(\"functions/assignment_functions.r\") : \n  functions/assignment_functions.r:60:0: unexpected end of input\n58:     theme_bw()\n59:  \n   ^\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "Error in source(\"functions/assignment_functions.r\") : \n  functions/assignment_functions.r:60:0: unexpected end of input\n58:     theme_bw()\n59:  \n   ^\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "Error in source(\"functions/assignment_functions.r\") : \n  functions/assignment_functions.r:59:0: unexpected end of input\n57:     geom_point(color = \"black\", size = 2, alpha=0.5) \n58:  \n   ^\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "Error in source(\"functions/assignment_functions.r\") : \n  functions/assignment_functions.r:59:0: unexpected end of input\n57:     geom_point(color = \"black\", size = 2, alpha=0.5) \n58:  \n   ^\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "Error in source(\"functions/assignment_functions.r\") : \n  functions/assignment_functions.r:61:1: unexpected '}'\n60: \n61: }\n    ^\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "Error in source(\"functions/assignment_functions.r\") : \n  functions/assignment_functions.r:61:1: unexpected '}'\n60: \n61: }\n    ^\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "> ",
        "explanatory_plot <- function(cleaned_data) {",
        "+ ",
        "  ggplot(cleaned_data, ",
        "+ ",
        "         aes(x = culmen_length_mm, ",
        "+ ",
        "             y = body_mass_g, ",
        "+ ",
        "             colour = species)) +",
        "+ ",
        "    geom_point(size = 2.5, alpha = 0.9) +",
        "+ ",
        "    labs(x = \"Culmen Length (mm)\", y = \"Body Mass (g)\", title = \"Explanatory Plot\") +",
        "+ ",
        "    theme_linedraw()",
        "+ ",
        "source(\"functions/assignment_functions.r\")",
        "+ ",
        "explanatory_plot(penguins_clean_Q2)",
        "Error: Incomplete expression: source(\"functions/assignment_functions.r\")\nexplanatory_plot(penguins_clean_Q2)\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "Error in source(\"functions/assignment_functions.r\") : \n  functions/assignment_functions.r:63:1: unexpected '}'\n62: \n63: }\n    ^\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "Error in element_line(color = \"black\", linetype = \"dashed\", alpha = 1) : \n  unused argument (alpha = 1)\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot(penguins_clean_Q2)",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "Error in source(\"functions/assignment_functions.r\") : \n  functions/assignment_functions.r:65:36: unexpected symbol\n64: #A function to save the results as a png\n65: save_results_png<- function(result plot\n                                       ^\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "Error in source(\"functions/assignment_functions.r\") : \n  functions/assignment_functions.r:65:36: unexpected symbol\n64: #A function to save the results as a png\n65: save_results_png<- function(result plot\n                                       ^\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "Error in source(\"functions/assignment_functions.r\") : \n  functions/assignment_functions.r:65:36: unexpected symbol\n64: #A function to save the results as a png\n65: save_results_png<- function(result plot\n                                       ^\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot <-explanatory_plot(penguins_clean_Q2)",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "Error in source(\"functions/assignment_functions.r\") : \n  functions/assignment_functions.r:65:36: unexpected symbol\n64: #A function to save the results as a png\n65: save_results_png<- function(result plot\n                                       ^\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "explanatory_plot <-explanatory_plot(penguins_clean_Q2)",
        "> ",
        "explanatory_plot",
        "> ",
        "save_results_png(explanatory_plot)",
        "Error in agg_png(\"figures/resultsplot.png\", width = 700, height = 500,  : \n  could not find function \"agg_png\"\n",
        "> ",
        "save_results_png(explanatory_plot)",
        "Error in agg_png(\"figures/resultsplot.png\", width = 700, height = 500,  : \n  could not find function \"agg_png\"\n",
        "> ",
        "save_results_png(explanatory_plot)",
        "Error in agg_png(\"figures/resultsplot.png\", width = 700, height = 500,  : \n  could not find function \"agg_png\"\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "save_results_png(explanatory_plot)",
        "Error in x$theme : object of type 'closure' is not subsettable\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "save_results_png(explanatory_plot)",
        "Error in result_plot + ggsave(\"figures/resultsplot.png\", width = 7, height = 5,  : \n  non-numeric argument to binary operator\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "save_results_png(explanatory_plot)",
        "Error in x$theme : object of type 'closure' is not subsettable\n",
        "> ",
        "#A function to save the results as a png",
        "> ",
        "save_exploratory_png <-  function() {",
        "+ ",
        "  ggsave(\"figures/save_exploratory_png\",  width = 6, height = 6.8)",
        "+ ",
        "}",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "save_results_png(explanatory_plot)",
        "Error in x$theme : object of type 'closure' is not subsettable\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "save_results_png(explanatory_plot)",
        "Error in x$theme : object of type 'closure' is not subsettable\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "save_results_png(explanatory_plot)",
        "Error in x$theme : object of type 'closure' is not subsettable\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "save_results_png(explanatory_plot)",
        "Error in x$theme : object of type 'closure' is not subsettable\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "save_exploratory_png(explanatory_plot)",
        "\u001B[1m\u001B[33mError\u001B[39m in `ggplot()` at functions/assignment_functions.r:53:2:\u001B[22m\n\u001B[38;5;246m\u001B[33m!\u001B[38;5;246m `data` cannot be a function.\n\u001B[36mℹ\u001B[38;5;246m Have you misspelled the `data` argument in `ggplot()`\u001B[39m\nBacktrace:\n\u001B[90m 1. \u001B[39m\u001B[1mglobal\u001B[22m save_exploratory_png(explanatory_plot)\n\u001B[90m 2. \u001B[39mglobal explanatory_plot(data)\n\u001B[90m      at functions/assignment_functions.r:66:2\u001B[39m\n\u001B[90m 4. \u001B[39m\u001B[1m\u001B[94mggplot2:::ggplot.function(\u001B[39m\u001B[22mcleaned_data, aes(x = culmen_length_mm, y = body_mass_g, colour = species)\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "save_exploratory_png(explanatory_plot)",
        "\u001B[1m\u001B[33mError\u001B[39m in `ggplot()` at functions/assignment_functions.r:53:2:\u001B[22m\n\u001B[38;5;246m\u001B[33m!\u001B[38;5;246m `data` cannot be a function.\n\u001B[36mℹ\u001B[38;5;246m Have you misspelled the `data` argument in `ggplot()`\u001B[39m\nBacktrace:\n\u001B[90m 1. \u001B[39m\u001B[1mglobal\u001B[22m save_exploratory_png(explanatory_plot)\n\u001B[90m 2. \u001B[39mglobal explanatory_plot(data)\n\u001B[90m      at functions/assignment_functions.r:66:2\u001B[39m\n\u001B[90m 4. \u001B[39m\u001B[1m\u001B[94mggplot2:::ggplot.function(\u001B[39m\u001B[22mcleaned_data, aes(x = culmen_length_mm, y = body_mass_g, colour = species)\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "save_exploratory_png(explanatory_plot)",
        "\u001B[1m\u001B[33mError\u001B[39m in `ggplot()` at functions/assignment_functions.r:53:2:\u001B[22m\n\u001B[38;5;246m\u001B[33m!\u001B[38;5;246m `data` cannot be a function.\n\u001B[36mℹ\u001B[38;5;246m Have you misspelled the `data` argument in `ggplot()`\u001B[39m\nBacktrace:\n\u001B[90m 1. \u001B[39m\u001B[1mglobal\u001B[22m save_exploratory_png(explanatory_plot)\n\u001B[90m 2. \u001B[39mglobal explanatory_plot(data)\n\u001B[90m      at functions/assignment_functions.r:66:2\u001B[39m\n\u001B[90m 4. \u001B[39m\u001B[1m\u001B[94mggplot2:::ggplot.function(\u001B[39m\u001B[22mcleaned_data, aes(x = culmen_length_mm, y = body_mass_g, colour = species)\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "save_exploratory_png(penguins_clean_Q2)",
        "\u001B[1m\u001B[33mError\u001B[39m in `ggplot()` at functions/assignment_functions.r:53:2:\u001B[22m\n\u001B[38;5;246m\u001B[33m!\u001B[38;5;246m `data` cannot be a function.\n\u001B[36mℹ\u001B[38;5;246m Have you misspelled the `data` argument in `ggplot()`\u001B[39m\nBacktrace:\n\u001B[90m 1. \u001B[39m\u001B[1mglobal\u001B[22m save_exploratory_png(penguins_clean_Q2)\n\u001B[90m 2. \u001B[39mglobal explanatory_plot(data)\n\u001B[90m      at functions/assignment_functions.r:66:2\u001B[39m\n\u001B[90m 4. \u001B[39m\u001B[1m\u001B[94mggplot2:::ggplot.function(\u001B[39m\u001B[22mcleaned_data, aes(x = culmen_length_mm, y = body_mass_g, colour = species)\u001B[1m\u001B[94m)\u001B[39m\u001B[22m\n",
        "> ",
        "linear_model <- lm(body_mass_g ~ culmen_length_mm, data = penguins_clean_Q2)",
        "> ",
        "linear_model <- lm(body_mass_g ~ culmen_length_mm, data = penguins_clean_Q2)",
        "> ",
        "summary(lm)",
        "Error in object[[i]] : object of type 'closure' is not subsettable\n",
        "> ",
        "linear_model <- lm(body_mass_g ~ culmen_length_mm, data = penguins_clean_Q2)",
        "> ",
        "summary(linear_model)",
        "\nCall:\nlm(formula = body_mass_g ~ culmen_length_mm, data = penguins_clean_Q2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1268.6  -438.7  -237.6   281.4  1618.7 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)  \n(Intercept)       2010.15     971.18   2.070   0.0466 *\nculmen_length_mm    41.76      21.55   1.938   0.0615 .\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 717.9 on 32 degrees of freedom\nMultiple R-squared: ",
        " 0.1051,\tAdjusted R-squared:  0.07709 \nF-statistic: 3.756 on 1 and 32 DF,  p-value: 0.06148\n\n",
        "> ",
        "linear_model_culmen_length_body_mass <- lm(body_mass_g ~ culmen_length_mm, data = penguins_clean_Q2)",
        "> ",
        "summary(linear_model_culmen_length_body_mass)",
        "\nCall:\nlm(formula = body_mass_g ~ culmen_length_mm, data = penguins_clean_Q2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1268.6  -438.7  -237.6   281.4  1618.7 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)  \n(Intercept)       2010.15     971.18   2.070   0.0466 *\nculmen_length_mm    41.76      21.55   1.938   0.0615 .\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 717.9 on 32 degrees of freedom\nMultiple R-squared: ",
        " 0.1051,\tAdjusted R-squared:  0.07709 \nF-statistic: 3.756 on 1 and 32 DF,  p-value: 0.06148\n\n",
        "> ",
        "shapiro_test_results <- shapiro.test(residuals(linear_model_culmen_length_body_mass))",
        "> ",
        "shapiro_test_results",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass)\nW = 0.93571, p-value = 0.04601\n\n",
        "> ",
        "qqnorm(residuals(linear_model_culmen_length_body_mass))",
        "> ",
        "qqline(residuals(linear_model_culmen_length_body_mass))",
        "> ",
        "linear_model_culmen_length_body_mass_transformed <- lm(log(body_mass_g) ~ log(culmen_length_mm), data = penguins_clean_Q2)",
        "> ",
        "summary(linear_model_culmen_length_body_mass)",
        "\nCall:\nlm(formula = body_mass_g ~ culmen_length_mm, data = penguins_clean_Q2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1268.6  -438.7  -237.6   281.4  1618.7 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)  \n(Intercept)       2010.15     971.18   2.070   0.0466 *\nculmen_length_mm    41.76      21.55   1.938   0.0615 .\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 717.9 on 32 degrees of freedom\nMultiple R-squared: ",
        " 0.1051,\tAdjusted R-squared:  0.07709 \nF-statistic: 3.756 on 1 and 32 DF,  p-value: 0.06148\n\n",
        "> ",
        "linear_model_culmen_length_body_mass_transformed <- lm((log(body_mass_g)) ~ log((culmen_length_mm)), data = penguins_clean_Q2)",
        "> ",
        "summary(linear_model_culmen_length_body_mass_transformed)",
        "\nCall:\nlm(formula = (log(body_mass_g)) ~ log((culmen_length_mm)), data = penguins_clean_Q2)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.37159 -0.10733 -0.04490  0.08315  0.34900 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)               6.4427     0.8943   7.204 3.51e-08 ***\nlog((culmen_length_mm))   0.4755     0.2357   2.018   0.0521 .  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error:",
        " 0.1759 on 32 degrees of freedom\nMultiple R-squared:  0.1129,\tAdjusted R-squared:  0.08513 \nF-statistic: 4.071 on 1 and 32 DF,  p-value: 0.05209\n\n",
        "> ",
        "shapiro_test_results_transformed <- shapiro.test(residuals(linear_model_culmen_length_body_mass))",
        "> ",
        "shapiro_test_results_transformed",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass)\nW = 0.93571, p-value = 0.04601\n\n",
        "> ",
        "shapiro_test_results_transformed <- shapiro.test(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "shapiro_test_results_transformed",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass_transformed)\nW = 0.96143, p-value = 0.2675\n\n",
        "> ",
        "shapiro_test_results <- shapiro.test(residuals(linear_model_culmen_length_body_mass))",
        "> ",
        "shapiro_test_results",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass)\nW = 0.93571, p-value = 0.04601\n\n",
        "> ",
        "qq_plot <-qqnorm(residuals(linear_model_culmen_length_body_mass)) +",
        "+ ",
        "qqline(residuals(linear_model_culmen_length_body_mass))",
        "Error in qqnorm(residuals(linear_model_culmen_length_body_mass)) + qqline(residuals(linear_model_culmen_length_body_mass)) : \n  non-numeric argument to binary operator\n",
        "> ",
        "qq_plot <-qqnorm(residuals(linear_model_culmen_length_body_mass)) qqline(residuals(linear_model_culmen_length_body_mass))",
        "Error: unexpected symbol in \"qq_plot <-qqnorm(residuals(linear_model_culmen_length_body_mass)) qqline\"\n",
        "> ",
        "qq_plot <-qqnorm(residuals(linear_model_culmen_length_body_mass)) ",
        "> ",
        "qq_plot <-qqnorm(residuals(linear_model_culmen_length_body_mass)) ",
        "> ",
        "qq_plot_line <- qqplot + qqline(residuals(linear_model_culmen_length_body_mass))",
        "Error in qqplot + qqline(residuals(linear_model_culmen_length_body_mass)) : \n  non-numeric argument to binary operator\n",
        "> ",
        "qq_plot_line",
        "Error: object 'qq_plot_line' not found\n",
        "> ",
        "qq_plot <-qqnorm(residuals(linear_model_culmen_length_body_mass)) ",
        "> ",
        "qq_plot_line <- qqplot + qqline(residuals(linear_model_culmen_length_body_mass))",
        "Error in qqplot + qqline(residuals(linear_model_culmen_length_body_mass)) : \n  non-numeric argument to binary operator\n",
        "> ",
        "shapiro_test_results_transformed <- shapiro.test(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "shapiro_test_results_transformed",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass_transformed)\nW = 0.96143, p-value = 0.2675\n\n",
        "> ",
        "",
        "> ",
        "qqplot_line_transformed <- qqnorm(residuals(linear_model_culmen_length_body_mass)) + qqline(residuals(linear_model_culmen_length_body_mass))",
        "Error in qqnorm(residuals(linear_model_culmen_length_body_mass)) + qqline(residuals(linear_model_culmen_length_body_mass)) : \n  non-numeric argument to binary operator\n",
        "> ",
        "qqplot_line_transformed",
        "Error: object 'qqplot_line_transformed' not found\n",
        "> ",
        "shapiro_test_results_transformed <- shapiro.test(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "shapiro_test_results_transformed",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass_transformed)\nW = 0.96143, p-value = 0.2675\n\n",
        "> ",
        "",
        "> ",
        "qqplot_line_transformed <- qqnorm(residuals(linear_model_culmen_length_body_mass)) + qqline(residuals(linear_model_culmen_length_body_mass))",
        "Error in qqnorm(residuals(linear_model_culmen_length_body_mass)) + qqline(residuals(linear_model_culmen_length_body_mass)) : \n  non-numeric argument to binary operator\n",
        "> ",
        "shapiro_test_results_transformed <- shapiro.test(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "shapiro_test_results_transformed",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass_transformed)\nW = 0.96143, p-value = 0.2675\n\n",
        "> ",
        "",
        "> ",
        "qqplot_line_transformed <- qqnorm(residuals(linear_model_culmen_length_body_mass_transformed)) + qqline(residuals(linear_model_culmen_length_body_mass_transformed))",
        "Error in qqnorm(residuals(linear_model_culmen_length_body_mass_transformed)) +  : \n  non-numeric argument to binary operator\n",
        "> ",
        "shapiro_test_results_transformed <- shapiro.test(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "shapiro_test_results_transformed",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass_transformed)\nW = 0.96143, p-value = 0.2675\n\n",
        "> ",
        "",
        "> ",
        "qqqnorm(residuals(linear_model_culmen_length_body_mass_transformed))  qqline(residuals(linear_model_culmen_length_body_mass_transformed))",
        "Error: unexpected symbol in \"qqqnorm(residuals(linear_model_culmen_length_body_mass_transformed))  qqline\"\n",
        "> ",
        "shapiro_test_results_transformed <- shapiro.test(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "shapiro_test_results_transformed",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass_transformed)\nW = 0.96143, p-value = 0.2675\n\n",
        "> ",
        "",
        "> ",
        "qqqnorm(residuals(linear_model_culmen_length_body_mass_transformed))  qqline(residuals(linear_model_culmen_length_body_mass_transformed))",
        "Error: unexpected symbol in \"qqqnorm(residuals(linear_model_culmen_length_body_mass_transformed))  qqline\"\n",
        "> ",
        "",
        "> ",
        "qqnorm(residuals(linear_model_culmen_length_body_mass)) ",
        "> ",
        "qqplot + qqline(residuals(linear_model_culmen_length_body_mass))",
        "Error in qqplot + qqline(residuals(linear_model_culmen_length_body_mass)) : \n  non-numeric argument to binary operator\n",
        "> ",
        "qqnorm(residuals(linear_model_culmen_length_body_mass)) ",
        "> ",
        "qqplot + qqline(residuals(linear_model_culmen_length_body_mass))",
        "Error in qqplot + qqline(residuals(linear_model_culmen_length_body_mass)) : \n  non-numeric argument to binary operator\n",
        "> ",
        "",
        "> ",
        "shapiro_test_results_transformed <- shapiro.test(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "shapiro_test_results_transformed",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass_transformed)\nW = 0.96143, p-value = 0.2675\n\n",
        "> ",
        "",
        "> ",
        "qqqnorm(residuals(linear_model_culmen_length_body_mass_transformed))  qqline(residuals(linear_model_culmen_length_body_mass_transformed))",
        "Error: unexpected symbol in \"qqqnorm(residuals(linear_model_culmen_length_body_mass_transformed))  qqline\"\n",
        "> ",
        "",
        "> ",
        "qqqnorm(residuals(linear_model_culmen_length_body_mass_transformed))  qqline(residuals(linear_model_culmen_length_body_mass_transformed))",
        "Error: unexpected symbol in \"qqqnorm(residuals(linear_model_culmen_length_body_mass_transformed))  qqline\"\n",
        "> ",
        "shapiro_test_results_transformed <- shapiro.test(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "shapiro_test_results_transformed",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass_transformed)\nW = 0.96143, p-value = 0.2675\n\n",
        "> ",
        "",
        "> ",
        "qqqnorm(residuals(linear_model_culmen_length_body_mass_transformed)) qqline(residuals(linear_model_culmen_length_body_mass_transformed))",
        "Error: unexpected symbol in \"qqqnorm(residuals(linear_model_culmen_length_body_mass_transformed)) qqline\"\n",
        "> ",
        "",
        "> ",
        "shapiro_test_results_transformed <- shapiro.test(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "shapiro_test_results_transformed",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass_transformed)\nW = 0.96143, p-value = 0.2675\n\n",
        "> ",
        "",
        "> ",
        "qqqnorm(residuals(linear_model_culmen_length_body_mass_transformed))",
        "Error in qqqnorm(residuals(linear_model_culmen_length_body_mass_transformed)) : \n  could not find function \"qqqnorm\"\n",
        "> ",
        "qqnorm(residuals(linear_model_culmen_length_body_mass)) ",
        "> ",
        "qqplot + qqline(residuals(linear_model_culmen_length_body_mass))",
        "Error in qqplot + qqline(residuals(linear_model_culmen_length_body_mass)) : \n  non-numeric argument to binary operator\n",
        "> ",
        "",
        "> ",
        "qqnorm(residuals(linear_model_culmen_length_body_mass)) ",
        "> ",
        "qqline(residuals(linear_model_culmen_length_body_mass))",
        "> ",
        "",
        "> ",
        "shapiro_test_results_transformed <- shapiro.test(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "shapiro_test_results_transformed",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass_transformed)\nW = 0.96143, p-value = 0.2675\n\n",
        "> ",
        "",
        "> ",
        "qqnorm(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "qqline(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "",
        "> ",
        "exp(6.4427)",
        "[1] 628.1004\n",
        "> ",
        "exp(0.4755)",
        "[1] 1.608818\n",
        "> ",
        "",
        "> ",
        "linear_model_culmen_length_body_mass_transformed <- lm((log(body_mass_g)) ~ ((log(culmen_length_mm)), data = penguins_clean_Q2)",
        "Error: unexpected ',' in \"linear_model_culmen_length_body_mass_transformed <- lm((log(body_mass_g)) ~ ((log(culmen_length_mm)),\"\n",
        "> ",
        "linear_model_culmen_length_body_mass_transformed <- lm((log(body_mass_g)) ~ (log(culmen_length_mm)), data = penguins_clean_Q2)",
        "> ",
        "summary(linear_model_culmen_length_body_mass_transformed)",
        "\nCall:\nlm(formula = (log(body_mass_g)) ~ (log(culmen_length_mm)), data = penguins_clean_Q2)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.37159 -0.10733 -0.04490  0.08315  0.34900 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(>|t|)    \n(Intercept)             6.4427     0.8943   7.204 3.51e-08 ***\nlog(culmen_length_mm)   0.4755     0.2357   2.018   0.0521 .  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error:",
        " 0.1759 on 32 degrees of freedom\nMultiple R-squared:  0.1129,\tAdjusted R-squared:  0.08513 \nF-statistic: 4.071 on 1 and 32 DF,  p-value: 0.05209\n\n",
        "> ",
        "shapiro_test_results_transformed <- shapiro.test(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "shapiro_test_results_transformed",
        "\n\tShapiro-Wilk normality test\n\ndata:  residuals(linear_model_culmen_length_body_mass_transformed)\nW = 0.96143, p-value = 0.2675\n\n",
        "> ",
        "",
        "> ",
        "qqnorm(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "qqline(residuals(linear_model_culmen_length_body_mass_transformed))",
        "> ",
        "",
        "> ",
        "sink(\"package_information.txt\")",
        "> ",
        "installed_packages <- installed.packages()",
        "> ",
        "print(installed_packages)",
        "> ",
        "ink()",
        "Error in ink() : could not find function \"ink\"\n",
        "> ",
        "View(installed_packages)",
        "> ",
        "",
        "> ",
        "sink(\"package_information.txt\")",
        "> ",
        "installed_packages <- installed.packages()",
        "> ",
        "print(installed_packages)",
        "> ",
        "",
        "> ",
        "ink()",
        "Error in ink() : could not find function \"ink\"\n",
        "> ",
        "sink(\"package_information.txt\")",
        "> ",
        "penguins_clean_Q1 <- penguins_raw %>%",
        "+ ",
        "  clean_names() %>%  ",
        "+ ",
        "  filter(complete.cases(culmen_depth_mm, body_mass_g)) %>%",
        "+ ",
        "  select(species, culmen_depth_mm, body_mass_g)",
        "> ",
        "dir.create(\"data\")",
        "Warning in dir.create(\"data\") :",
        " 'data' already exists\n",
        "> ",
        "write.csv(penguins_raw, \"data/penguins_raw.csv\")",
        "> ",
        "",
        "> ",
        "penguins_raw <- penguins_raw",
        "> ",
        "penguins_clean_Q1 <- penguins_raw %>%",
        "+ ",
        "  clean_names() %>%  ",
        "+ ",
        "  filter(complete.cases(culmen_depth_mm, body_mass_g)) %>%",
        "+ ",
        "  select(species, culmen_depth_mm, body_mass_g)",
        "> ",
        "misleading_graph <-ggplot(penguins_clean_Q1, aes(x = culmen_depth_mm, y = body_mass_g)) +",
        "+ ",
        "  geom_point(size =1, alpha = 0.4) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = F, color = \"black\") +",
        "+ ",
        "  labs(x = \"Culmen depth (mm)\", y = \"Body mass (g)\", title = \"The relationship between Culmen depth and Body mass in Palmer Penguins\")+",
        "+ ",
        "  ylim(0,6000) +",
        "+ ",
        "  theme_bw()",
        "> ",
        "  ",
        "> ",
        "  misleading_graph",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "Warning:",
        " Removed 2 rows containing non-finite values (`stat_smooth()`).\n",
        "Warning:",
        " Removed 2 rows containing missing values (`geom_point()`).\n",
        "> ",
        "",
        "> ",
        "ggplot(penguins_clean_Q1, aes(x = culmen_depth_mm, y = body_mass_g, color = species)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, size = 1.5) +",
        "+ ",
        "  labs(x = \"Culmen Length (mm)\", y = \"Body mass (g)\", title = \"The relationship between Culmen depth and Body mass ",
        "+ ",
        "       accross different species of Palmer Penguins\") +",
        "+ ",
        "  theme_bw()",
        "Warning:",
        " Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\nThis warning is displayed once every 8 hours.\nCall `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.\n",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "> ",
        "",
        "> ",
        "ggplot(penguins_clean_Q1, aes(x = culmen_depth_mm, y = body_mass_g, color = species)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, size = 1.5) +",
        "+ ",
        "  labs(x = \"Culmen Length (mm)\", y = \"Body mass (g)\", title = \"The relationship between Culmen depth and Body mass ",
        "+ ",
        "       accross different species of Palmer Penguins\") +",
        "+ ",
        "  theme_bw()",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "> ",
        "",
        "> ",
        "ggplot(penguins_clean_Q1, aes(x = culmen_depth_mm, y = body_mass_g, color = species)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, size = 1.5) +",
        "+ ",
        "  labs(x = \"Culmen Length (mm)\", y = \"Body mass (g)\", title = \"The relationship between Culmen depth and Body mass ",
        "+ ",
        "       accross different species of Palmer Penguins\") +",
        "+ ",
        "  theme_bw()",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "> ",
        "improved_graph <- ggplot(penguins_clean_Q1, aes(x = culmen_depth_mm, y = body_mass_g, color = species)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, size = 1.5) +",
        "+ ",
        "  labs(x = \"Culmen Length (mm)\", y = \"Body mass (g)\", title = \"The relationship between Culmen depth and Body mass ",
        "+ ",
        "       accross different species of Palmer Penguins\") +",
        "+ ",
        "  theme_bw()",
        "> ",
        "",
        "> ",
        "improved_graph",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "> ",
        "# Assuming you have created ggplot objects: misleading_graph and improved_graph",
        "> ",
        "",
        "> ",
        "# Save the misleading graph as a file (e.g., PNG)",
        "> ",
        "ggsave(\"misleading_graph.png\", plot = misleading_graph, width = 8, height = 6, units = \"in\")",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "Warning:",
        " Removed 2 rows containing non-finite values (`stat_smooth()`).\n",
        "Warning:",
        " Removed 2 rows containing missing values (`geom_point()`).\n",
        "> ",
        "",
        "> ",
        "# Save the improved graph as a file (e.g., JPEG)",
        "> ",
        "ggsave(\"improved_graph.jpg\", plot = improved_graph, width = 8, height = 6, units = \"in\")",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "ggsave(\"figures/misleading_graph.png\", plot = misleading_graph, width = 8, height = 6, units = \"in\")",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "Warning:",
        " Removed 2 rows containing non-finite values (`stat_smooth()`).\n",
        "Warning:",
        " Removed 2 rows containing missing values (`geom_point()`).\n",
        "> ",
        "ggsave(\"figures/improved_graph.jpg\", plot = improved_graph, width = 8, height = 6, units = \"in\")",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "ggsave(\"figures/Q1_misleading_graph.png\", plot = misleading_graph, width = 8, height = 6, units = \"in\")",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "Warning:",
        " Removed 2 rows containing non-finite values (`stat_smooth()`).\n",
        "Warning:",
        " Removed 2 rows containing missing values (`geom_point()`).\n",
        "> ",
        "ggsave(\"figures/Q1_improved_graph.jpg\", plot = improved_graph, width = 8, height = 6, units = \"in\")",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "> ",
        "",
        "> ",
        "#all of my functions are stored in my cleaning.r file ",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "",
        "> ",
        "penguins_clean_Q2 <- penguins_raw  %>%",
        "+ ",
        "    clean_column_names() %>%",
        "+ ",
        "    shorten_species() %>%",
        "+ ",
        "    remove_empty_columns_rows() %>%",
        "+ ",
        "   remove_NA()",
        "> ",
        "write.csv(penguins_clean_Q1, \"data/penguins_clean_Q1\")",
        "> ",
        "explanatory_plot <-explanatory_plot(penguins_clean_Q2)",
        "> ",
        "explanatory_plot",
        "> ",
        "ggsave(\"figures/Q2_exploratory_graph\", plot = improved_graph, width = 8, height = 6, units = \"in\")",
        "Error in `ggsave()`:\n! `filename` has no file extension and `device` is \"NULL\".\nBacktrace:\n 1. ggplot2::ggsave(...)\n",
        "> ",
        "ggsave(\"figures/Q2_exploratory_plot\", plot = explanatory_plot, width = 8, height = 6, units = \"in\")",
        "Error in `ggsave()`:\n! `filename` has no file extension and `device` is \"NULL\".\nBacktrace:\n 1. ggplot2::ggsave(...)\n",
        "> ",
        "ggsave(\"figures/Q2_exploratory_plot.png\", plot = explanatory_plot, width = 8, height = 6, units = \"in\")",
        "> ",
        "linear_model_culmen_length_body_mass <- lm(body_mass_g ~ culmen_length_mm, data = penguins_clean_Q2)",
        "> ",
        "summary(linear_model_culmen_length_body_mass)",
        "> ",
        "summary(linear_model_culmen_length_body_mass)",
        "> ",
        "summary(linear_model_culmen_length_body_mass)",
        "> ",
        "linear_model_culmen_length_body_mass <- lm(body_mass_g ~ culmen_length_mm, data = penguins_clean_Q2)",
        "> ",
        "summary(linear_model_culmen_length_body_mass)",
        "> ",
        "shapiro_test_results <- shapiro.test(residuals(linear_model_culmen_length_body_mass))",
        "> ",
        "shapiro_test_results",
        "> ",
        "View(shapiro_test_results)",
        "> ",
        "knitr::opts_chunk$set(echo = TRUE)",
        "> ",
        "install.packages(\"palmer penguins\")",
        "> ",
        "install.packages(\"ggplot2\")",
        "> ",
        "install.packages(\"janitor\")",
        "> ",
        "install.packages(\"dplyr\")",
        "> ",
        "install.packages(\"tinytex\")",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(janitor)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(tinytex)",
        "> ",
        "sink(\"package_information.txt\")",
        "> ",
        "dir.create(\"data\")",
        "Warning in dir.create(\"data\") :",
        " 'data' already exists\n",
        "> ",
        "write.csv(penguins_raw, \"data/penguins_raw.csv\")",
        "> ",
        "",
        "> ",
        "penguins_raw <- penguins_raw",
        "> ",
        "penguins_clean_Q1 <- penguins_raw %>%",
        "+ ",
        "  clean_names() %>%  ",
        "+ ",
        "  filter(complete.cases(culmen_depth_mm, body_mass_g)) %>%",
        "+ ",
        "  select(species, culmen_depth_mm, body_mass_g)",
        "> ",
        "write.csv(penguins_clean_Q1, \"data/penguins_clean_Q1\")",
        "> ",
        "misleading_graph <-ggplot(penguins_clean_Q1, aes(x = culmen_depth_mm, y = body_mass_g)) +",
        "+ ",
        "  geom_point(size =1, alpha = 0.4) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = F, color = \"black\") +",
        "+ ",
        "  labs(x = \"Culmen depth (mm)\", y = \"Body mass (g)\", title = \"The relationship between Culmen depth and Body mass in Palmer Penguins\")+",
        "+ ",
        "  ylim(0,6000) +",
        "+ ",
        "  theme_bw()",
        "> ",
        "  ",
        "> ",
        "  misleading_graph",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "Warning:",
        " Removed 2 rows containing non-finite values (`stat_smooth()`).\n",
        "Warning:",
        " Removed 2 rows containing missing values (`geom_point()`).\n",
        "> ",
        "View(clean_column_names)",
        "> ",
        "improved_graph <- ggplot(penguins_clean_Q1, aes(x = culmen_depth_mm, y = body_mass_g, color = species)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, size = 1.5) +",
        "+ ",
        "  labs(x = \"Culmen Length (mm)\", y = \"Body mass (g)\", title = \"The relationship between Culmen depth and Body mass ",
        "+ ",
        "       accross different species of Palmer Penguins\") +",
        "+ ",
        "  theme_bw()",
        "> ",
        "",
        "> ",
        "improved_graph",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "> ",
        "",
        "> ",
        "ggsave(\"figures/Q1_misleading_graph.png\", plot = misleading_graph, width = 8, height = 6, units = \"in\")",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "Warning:",
        " Removed 2 rows containing non-finite values (`stat_smooth()`).\n",
        "Warning:",
        " Removed 2 rows containing missing values (`geom_point()`).\n",
        "> ",
        "ggsave(\"figures/Q1_improved_graph.jpg\", plot = improved_graph, width = 8, height = 6, units = \"in\")",
        "`geom_smooth()` using formula = 'y ~ x'\n",
        "> ",
        "",
        "> ",
        "source(\"functions/assignment_functions.r\")",
        "> ",
        "",
        "> ",
        "penguins_clean_Q2 <- penguins_raw  %>%",
        "+ ",
        "    clean_column_names() %>%",
        "+ ",
        "    shorten_species() %>%",
        "+ ",
        "    remove_empty_columns_rows() %>%",
        "+ ",
        "   remove_NA()",
        "> ",
        "write.csv(penguins_clean_Q2, \"data/penguins_clean_Q2\")",
        "> ",
        "explanatory_plot <-explanatory_plot(penguins_clean_Q2)",
        "> ",
        "explanatory_plot",
        "> ",
        "ggsave(\"figures/Q2_exploratory_plot.png\", plot = explanatory_plot, width = 8, height = 6, units = \"in\")",
        "> ",
        "linear_model_culmen_length_body_mass <- lm(body_mass_g ~ culmen_length_mm, data = penguins_clean_Q2)",
        "> ",
        "summary(linear_model_culmen_length_body_mass)",
        "\nRestarting R session...\n\n"
    ]
}